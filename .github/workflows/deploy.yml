name: Deploy Go Profile Service to VPS

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository
      - uses: actions/checkout@v4

      # Step 2: Set up Go environment
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      # Step 3: Build the Go binary
      - name: Build Go Profile Service
        run: |
          go mod tidy
          go build -o profile-service .

      # Step 4: Deploy to VPS via SCP + SSH
      - name: Deploy to VPS
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_DIR: ${{ secrets.REMOTE_DIR }}
          CUSTOM_PORT: ${{ secrets.CUSTOM_PORT }}
        run: |
          set -x
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p $CUSTOM_PORT -H $HOST >> ~/.ssh/known_hosts

          # Copy compiled binary + Docker infra files
          scp -P $CUSTOM_PORT -r . $USERNAME@$HOST:$REMOTE_DIR

          # Connect to VPS and run deploy steps
          ssh -p $CUSTOM_PORT $USERNAME@$HOST <<EOF
            set -e
            cd $REMOTE_DIR || { echo "[!] Failed to cd into \$REMOTE_DIR"; exit 1; }

            echo ">> Listing directory contents:"
            ls -lah

            echo ">> Docker Compose version:"
            docker compose version || docker-compose version

            echo ">> Bringing service down..."
            docker compose -f docker-compose.yml down || echo "[!] compose down failed (not fatal)"

            echo ">> Bringing service up..."
            docker compose -f docker-compose.yml up --build -d || { echo "[!] compose up failed"; exit 1; }

            echo "âœ… Deploy complete."
          EOF
